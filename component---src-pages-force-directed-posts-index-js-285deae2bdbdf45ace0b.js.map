{"version":3,"sources":["webpack:///./src/pages/ForceDirectedPosts/index.js","webpack:///./src/lib/ForceDirectedGraph/Point2D.ts","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./src/lib/ForceDirectedGraph/ForceDirectedGraph.ts","webpack:///./src/hexagons/clients/blog.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["PALETTE","TWO_PI","Math","PI","ForceDirectedPosts","setup","items","_this","fdg","ForceDirectedGraph","Point2D","randomizePositions","map","item","tags","Object","assign","prepareRelationshipMatrix","step","counter","placedItems","forEach","position","x","random","y","ctx","clearRect","pos","scale","length","tag","i","beginPath","moveTo","arc","fillStyle","charCodeAt","fill","setTimeout","componentDidMount","_this2","this","blogClient","Post","list","then","response","data","render","_this3","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","width","height","ref","getContext","Component","add","point","factor","$export","__webpack_require__","P","areaSize","ACCELERATION_FACTOR","relationshipMatrix","forceOnItemFromSourceItem","targetItem","sourceItem","relationship","Error","totalForceOnItem","itemIndex","aggregateForce","placedItem","placedItemIndex","id","force","getInitialPlacement","initializePositions","moveItem","distance","count","getItemsRelationship","N","Array","j","bump","amount","mappersmith__WEBPACK_IMPORTED_MODULE_0__","mappersmith__WEBPACK_IMPORTED_MODULE_0___default","n","mappersmith_middleware_encode_json__WEBPACK_IMPORTED_MODULE_1__","mappersmith_middleware_encode_json__WEBPACK_IMPORTED_MODULE_1___default","forge","clientId","host","middleware","EncodeJson","resources","path","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","end","endPos"],"mappings":"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","file":"component---src-pages-force-directed-posts-index-js-285deae2bdbdf45ace0b.js","sourcesContent":["import React, { Component } from \"react\"\nimport blogClient from \"../../hexagons/clients/blog\"\nimport ForceDirectedGraph from \"../../lib/ForceDirectedGraph/ForceDirectedGraph\"\nimport Point2D from \"../../lib/ForceDirectedGraph/Point2D\"\n\nconst PALETTE = [\n  \"#a00\",\n  \"#0a0\",\n  \"#00a\",\n  \"#990\",\n  \"#da0\",\n  \"#099\",\n  \"#909\",\n  \"#555\",\n  \"#f3f\",\n]\nconst TWO_PI = 2 * Math.PI\n\nclass ForceDirectedPosts extends Component {\n  componentDidMount() {\n    blogClient.Post.list().then(response => {\n      const items = response.data().items\n      this.setup(items)\n    })\n  }\n\n  setup = items => {\n    this.fdg = new ForceDirectedGraph(new Point2D(TWO_PI, TWO_PI))\n\n    this.fdg.randomizePositions(\n      items.map(item =>\n        item.tags === [] ? { ...item, tags: [\"untagged\"] } : item\n      )\n    )\n    this.fdg.prepareRelationshipMatrix()\n\n    this.step()\n  }\n\n  counter = 0\n\n  step = () => {\n    this.counter = (this.counter + 1) % 200\n\n    if (this.counter === 0) {\n      this.fdg.placedItems.forEach(item => {\n        item.position.x += 0.5 * (Math.random() - 0.5)\n        item.position.y += 0.5 * (Math.random() - 0.5)\n      })\n    }\n    this.fdg.step()\n\n    this.ctx.clearRect(0, 0, 500, 500)\n\n    this.fdg.placedItems.forEach(item => {\n      const pos = new Point2D(item.position.x, item.position.y)\n      pos.scale(500 / TWO_PI)\n\n      let step = TWO_PI / item.tags.length\n\n      item.tags.forEach((tag, i) => {\n        this.ctx.beginPath()\n        this.ctx.moveTo(pos.x, pos.y)\n        this.ctx.arc(pos.x, pos.y, 8, i * step, (i + 1) * step)\n        this.ctx.fillStyle = PALETTE[tag.charCodeAt(0) % PALETTE.length]\n        this.ctx.fill()\n      })\n    })\n\n    setTimeout(this.step, 1)\n  }\n\n  render() {\n    return (\n      <canvas\n        width=\"500\"\n        height=\"500\"\n        ref={ref => (this.ctx = ref.getContext(\"2d\"))}\n      />\n    )\n  }\n}\n\nexport default ForceDirectedPosts\n","class Point2D {\n  public x: number\n  public y: number\n\n  constructor(x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  public add(point: Point2D): Point2D {\n    this.x += point.x\n    this.y += point.y\n\n    return this\n  }\n\n  public scale(factor: number): Point2D {\n    this.x *= factor\n    this.y *= factor\n\n    return this\n  }\n}\n\nexport default Point2D\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import { Item } from \"./types.d\"\nimport Point2D from \"./Point2D\"\n\nclass ForceDirectedGraph {\n  public areaSize: Point2D = null\n  public placedItems: Item[] = null\n  private ACCELERATION_FACTOR = null\n  private relationshipMatrix = [[]]\n\n  constructor(areaSize: Point2D, ACCELERATION_FACTOR: number = 0.0004) {\n    this.areaSize = areaSize\n    this.ACCELERATION_FACTOR = ACCELERATION_FACTOR\n  }\n\n  public forceOnItemFromSourceItem = (\n    targetItem: Item,\n    sourceItem: Item,\n    areaSize: Point2D,\n    relationship: object\n  ): Point2D => {\n    throw new Error(`forceOnItemFromSourceItem() not defined as (\n      targetItem: Item,\n      sourceItem: Item,\n      areaSize: Point2D,\n      relationship: object\n    ): Point2D`)\n  }\n\n  totalForceOnItem = (itemIndex: number): Point2D => {\n    const item = this.placedItems[itemIndex]\n    let aggregateForce = new Point2D(0, 0)\n\n    this.placedItems.forEach((placedItem, placedItemIndex) => {\n      if (placedItem.id === item.id) return\n\n      const force = this.forceOnItemFromSourceItem(\n        item,\n        placedItem,\n        this.areaSize,\n        this.relationshipMatrix[placedItemIndex][itemIndex]\n      )\n\n      aggregateForce.add(force)\n    })\n\n    return aggregateForce\n  }\n\n  public getInitialPlacement = (item: Item): Point2D =>\n    new Point2D(\n      this.areaSize.x * Math.random(),\n      this.areaSize.y * Math.random()\n    )\n\n  public initializePositions = (items: Item[]): void => {\n    this.placedItems = items.map((item: Item) => {\n      return {\n        ...item,\n        position: this.getInitialPlacement(item),\n      }\n    })\n  }\n\n  private moveItem = (item: Item, distance: Point2D): void => {\n    item.position.add(distance)\n    if (item.position.x < 0) {\n      item.position.x += this.areaSize.x\n    } else if (item.position.x > this.areaSize.x) {\n      item.position.x -= this.areaSize.x\n    }\n    if (item.position.y < 0) {\n      item.position.y += this.areaSize.y\n    } else if (item.position.y > this.areaSize.y) {\n      item.position.y -= this.areaSize.y\n    }\n  }\n\n  public step = (count: number = 1): void => {\n    for (let step = count; step > 0; step--) {\n      for (let i = this.placedItems.length - 1; i >= 0; i--) {\n        const force = this.totalForceOnItem(i)\n\n        this.moveItem(\n          this.placedItems[i],\n          force.scale(this.ACCELERATION_FACTOR)\n        )\n      }\n    }\n  }\n\n  public getItemsRelationship = (\n    sourceItem: Item,\n    targetItem: Item\n  ): object => {\n    throw \"getItemsRelationship must be defined as (sourceItem:Item, targetItem:Item):object\"\n  }\n\n  public prepareRelationshipMatrix = (): object[][] => {\n    const N = this.placedItems.length\n    const relationshipMatrix = Array(N)\n      .fill(0)\n      .map(() => Array(N).fill(0))\n\n    for (let i = 0; i < N; ++i) {\n      for (let j = 0; j < N; ++j) {\n        if (i == j) continue\n\n        const sourceItem = this.placedItems[i]\n        const targetItem = this.placedItems[j]\n\n        const relationship = this.getItemsRelationship(sourceItem, targetItem)\n\n        relationshipMatrix[i][j] = relationship\n        relationshipMatrix[j][i] = relationship\n      }\n    }\n\n    this.relationshipMatrix = relationshipMatrix\n    return relationshipMatrix\n  }\n\n  public bump = (amount: number): void => {\n    this.placedItems.forEach(item => {\n      item.position.x += amount * (Math.random() - 0.5)\n      item.position.y += amount * (Math.random() - 0.5)\n    })\n  }\n}\n\nexport default ForceDirectedGraph\n","import forge from \"mappersmith\"\nimport EncodeJson from \"mappersmith/middleware/encode-json\"\n\nexport default forge({\n  clientId: \"joes-blog\",\n  host: \"\",\n  middleware: [EncodeJson],\n  resources: {\n    Post: {\n      list: { path: \"/feed-1.json?z=\" + Math.random() }, // process.env.POSTS_ENDPOINT\n    },\n  },\n})\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}