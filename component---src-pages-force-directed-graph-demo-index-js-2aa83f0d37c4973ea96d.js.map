{"version":3,"sources":["webpack:///./src/pages/ForceDirectedGraphDemo/index.js","webpack:///./src/lib/ForceDirectedGraph/Point2D.ts","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./src/lib/ForceDirectedGraph/ForceDirectedGraph.ts","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["PALETTE","TWO_PI","Math","PI","ForceDirectedGraphDemo","setup","canvasRef","console","log","_this","canvas","ctx","getContext","fdg","ForceDirectedGraph","Point2D","items","i","push","id","tags","round","random","randomizePositions","prepareRelationshipMatrix","step","clearRect","placedItems","forEach","item","pos","position","x","y","scale","length","tag","beginPath","arc","fillStyle","fill","setTimeout","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","width","height","ref","this","Component","add","point","factor","$export","__webpack_require__","P","areaSize","ACCELERATION_FACTOR","relationshipMatrix","forceOnItemFromSourceItem","targetItem","sourceItem","relationship","Error","totalForceOnItem","itemIndex","aggregateForce","placedItem","placedItemIndex","force","getInitialPlacement","initializePositions","map","Object","assign","moveItem","distance","count","getItemsRelationship","N","Array","j","bump","amount","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","end","endPos"],"mappings":"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","file":"component---src-pages-force-directed-graph-demo-index-js-2aa83f0d37c4973ea96d.js","sourcesContent":["import React, { Component } from \"react\"\nimport ForceDirectedGraph from \"../../lib/ForceDirectedGraph/ForceDirectedGraph\"\nimport Point2D from \"../../lib/ForceDirectedGraph/Point2D\"\n\nconst PALETTE = [\"#a00\", \"#0a0\", \"#00a\", \"#990\", \"#099\", \"#909\", \"#555\"]\nconst TWO_PI = 2 * Math.PI\n\nclass ForceDirectedGraphDemo extends Component {\n  setup = canvasRef => {\n    console.log({ canvasRef })\n    this.canvas = canvasRef\n    this.ctx = canvasRef.getContext(\"2d\")\n\n    this.fdg = new ForceDirectedGraph(new Point2D(TWO_PI, TWO_PI))\n\n    const items = []\n\n    for (let i = 0; i < 200; i++) {\n      items.push({\n        id: i,\n        tags: [`${Math.round(6 * Math.random() * Math.random())}`],\n      })\n    }\n    for (let i = 0; i < 10; i++) {\n      items.push({\n        id: i,\n        tags: [`${i}`, `${(i + 1) % 8}`],\n      })\n    }\n\n    this.fdg.randomizePositions(items)\n    this.fdg.prepareRelationshipMatrix()\n\n    this.step()\n  }\n\n  step = () => {\n    this.fdg.step()\n\n    this.ctx.clearRect(0, 0, 500, 500)\n\n    this.fdg.placedItems.forEach(item => {\n      const pos = new Point2D(item.position.x, item.position.y)\n      pos.scale(500 / TWO_PI)\n\n      let step = TWO_PI / item.tags.length\n\n      item.tags.forEach((tag, i) => {\n        this.ctx.beginPath()\n        this.ctx.arc(pos.x, pos.y, 6, i * step, (i + 1) * step)\n        this.ctx.fillStyle = PALETTE[tag]\n        this.ctx.fill()\n      })\n    })\n    setTimeout(this.step, 50)\n  }\n\n  render() {\n    return <canvas width=\"500\" height=\"500\" ref={this.setup} />\n  }\n}\n\nexport default ForceDirectedGraphDemo\n","class Point2D {\n  public x: number\n  public y: number\n\n  constructor(x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  public add(point: Point2D): Point2D {\n    this.x += point.x\n    this.y += point.y\n\n    return this\n  }\n\n  public scale(factor: number): Point2D {\n    this.x *= factor\n    this.y *= factor\n\n    return this\n  }\n}\n\nexport default Point2D\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import { Item } from \"./types.d\"\nimport Point2D from \"./Point2D\"\n\nclass ForceDirectedGraph {\n  public areaSize: Point2D = null\n  public placedItems: Item[] = null\n  private ACCELERATION_FACTOR = null\n  private relationshipMatrix = [[]]\n\n  constructor(areaSize: Point2D, ACCELERATION_FACTOR: number = 0.0004) {\n    this.areaSize = areaSize\n    this.ACCELERATION_FACTOR = ACCELERATION_FACTOR\n  }\n\n  public forceOnItemFromSourceItem = (\n    targetItem: Item,\n    sourceItem: Item,\n    areaSize: Point2D,\n    relationship: object\n  ): Point2D => {\n    throw new Error(`forceOnItemFromSourceItem() not defined as (\n      targetItem: Item,\n      sourceItem: Item,\n      areaSize: Point2D,\n      relationship: object\n    ): Point2D`)\n  }\n\n  totalForceOnItem = (itemIndex: number): Point2D => {\n    const item = this.placedItems[itemIndex]\n    let aggregateForce = new Point2D(0, 0)\n\n    this.placedItems.forEach((placedItem, placedItemIndex) => {\n      if (placedItem.id === item.id) return\n\n      const force = this.forceOnItemFromSourceItem(\n        item,\n        placedItem,\n        this.areaSize,\n        this.relationshipMatrix[placedItemIndex][itemIndex]\n      )\n\n      aggregateForce.add(force)\n    })\n\n    return aggregateForce\n  }\n\n  public getInitialPlacement = (item: Item): Point2D =>\n    new Point2D(\n      this.areaSize.x * Math.random(),\n      this.areaSize.y * Math.random()\n    )\n\n  public initializePositions = (items: Item[]): void => {\n    this.placedItems = items.map((item: Item) => {\n      return {\n        ...item,\n        position: this.getInitialPlacement(item),\n      }\n    })\n  }\n\n  private moveItem = (item: Item, distance: Point2D): void => {\n    item.position.add(distance)\n    if (item.position.x < 0) {\n      item.position.x += this.areaSize.x\n    } else if (item.position.x > this.areaSize.x) {\n      item.position.x -= this.areaSize.x\n    }\n    if (item.position.y < 0) {\n      item.position.y += this.areaSize.y\n    } else if (item.position.y > this.areaSize.y) {\n      item.position.y -= this.areaSize.y\n    }\n  }\n\n  public step = (count: number = 1): void => {\n    for (let step = count; step > 0; step--) {\n      for (let i = this.placedItems.length - 1; i >= 0; i--) {\n        const force = this.totalForceOnItem(i)\n\n        this.moveItem(\n          this.placedItems[i],\n          force.scale(this.ACCELERATION_FACTOR)\n        )\n      }\n    }\n  }\n\n  public getItemsRelationship = (\n    sourceItem: Item,\n    targetItem: Item\n  ): object => {\n    throw \"getItemsRelationship must be defined as (sourceItem:Item, targetItem:Item):object\"\n  }\n\n  public prepareRelationshipMatrix = (): object[][] => {\n    const N = this.placedItems.length\n    const relationshipMatrix = Array(N)\n      .fill(0)\n      .map(() => Array(N).fill(0))\n\n    for (let i = 0; i < N; ++i) {\n      for (let j = 0; j < N; ++j) {\n        if (i == j) continue\n\n        const sourceItem = this.placedItems[i]\n        const targetItem = this.placedItems[j]\n\n        const relationship = this.getItemsRelationship(sourceItem, targetItem)\n\n        relationshipMatrix[i][j] = relationship\n        relationshipMatrix[j][i] = relationship\n      }\n    }\n\n    this.relationshipMatrix = relationshipMatrix\n    return relationshipMatrix\n  }\n\n  public bump = (amount: number): void => {\n    this.placedItems.forEach(item => {\n      item.position.x += amount * (Math.random() - 0.5)\n      item.position.y += amount * (Math.random() - 0.5)\n    })\n  }\n}\n\nexport default ForceDirectedGraph\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}