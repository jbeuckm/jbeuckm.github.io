{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["styles","container","marginLeft","marginRight","maxWidth","paddingLeft","paddingRight","navLinks","width","position","height","leftButton","left","rightButton","right","Template","componentDidMount","document","body","style","overflow","render","_this$props","this","props","data","_this$props$pathConte","pathContext","prev","next","post","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","name","content","tags","join","href","path","dateTime","date","map","tag","key","dangerouslySetInnerHTML","__html","html","Component","postQuery"],"mappings":"4NAGMA,EAAS,CACbC,UAAW,CACTC,WAAY,OACZC,YAAa,OACbC,SAAU,IACVC,YAAa,GACbC,aAAc,IAEhBC,SAAU,CACRC,MAAO,OACPC,SAAU,WACVC,OAAQ,IAEVC,WAAY,CACVF,SAAU,WACVG,KAAM,GAERC,YAAa,CACXJ,SAAU,WACVK,MAAO,IAIUC,oGACnBC,kBAAA,WACEC,SAASC,KAAKC,MAAMC,SAAW,UAGjCC,OAAA,WAAS,IAAAC,EAIHC,KAAKC,MAFPC,EAFKH,EAELG,KAFKC,EAAAJ,EAGLK,YAAeC,EAHVF,EAGUE,KAAMC,EAHhBH,EAGgBG,KAECC,EAASL,EAAzBM,eAER,OACEC,EAAAC,EAAAC,cAAA,OAAKf,MAAOnB,EAAOC,WACjB+B,EAAAC,EAAAC,cAACC,EAAA,OAAD,KACEH,EAAAC,EAAAC,cAAA,iBAASJ,EAAKM,YAAYC,MAA1B,yBACAL,EAAAC,EAAAC,cAAA,QAAMI,KAAK,WAAWC,QAAST,EAAKM,YAAYI,KAAKC,KAAK,SAG5DT,EAAAC,EAAAC,cAAA,OAAKf,MAAOnB,EAAOO,UAChBqB,GACCI,EAAAC,EAAAC,cAAA,QAAMf,MAAOnB,EAAOW,YAClBqB,EAAAC,EAAAC,cAAA,KAAGQ,KAAMd,EAAKQ,YAAYO,MAA1B,SAGHd,GACCG,EAAAC,EAAAC,cAAA,QAAMf,MAAOnB,EAAOa,aAClBmB,EAAAC,EAAAC,cAAA,KAAGQ,KAAMb,EAAKO,YAAYO,MAA1B,UAKNX,EAAAC,EAAAC,cAAA,UAAKJ,EAAKM,YAAYC,OACtBL,EAAAC,EAAAC,cAAA,QAAMU,SAAUd,EAAKM,YAAYS,MAAOf,EAAKM,YAAYS,MACzDb,EAAAC,EAAAC,cAAA,UACGJ,EAAKM,YAAYI,KAAKM,IAAI,SAAAC,GAAG,OAC5Bf,EAAAC,EAAAC,cAAA,MAAIc,IAAKD,GAAMA,MAInBf,EAAAC,EAAAC,cAAA,WAASe,wBAAyB,CAAEC,OAAQpB,EAAKqB,aAxCnBC,aA8CzBC,EAAS","file":"component---src-templates-post-js-399c072f0a78b2e1771e.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nconst styles = {\n  container: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: 600,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  navLinks: {\n    width: \"100%\",\n    position: \"relative\",\n    height: 15,\n  },\n  leftButton: {\n    position: \"absolute\",\n    left: 0,\n  },\n  rightButton: {\n    position: \"absolute\",\n    right: 0,\n  },\n}\n\nexport default class Template extends Component {\n  componentDidMount() {\n    document.body.style.overflow = \"auto\"\n  }\n\n  render() {\n    const {\n      data,\n      pathContext: { prev, next },\n    } = this.props\n    const { markdownRemark: post } = data\n\n    return (\n      <div style={styles.container}>\n        <Helmet>\n          <title>\"{post.frontmatter.title}\" - from Joe Beuckman</title>\n          <meta name=\"keywords\" content={post.frontmatter.tags.join(\", \")} />\n        </Helmet>\n\n        <div style={styles.navLinks}>\n          {prev && (\n            <span style={styles.leftButton}>\n              <a href={prev.frontmatter.path}>prev</a>\n            </span>\n          )}\n          {next && (\n            <span style={styles.rightButton}>\n              <a href={next.frontmatter.path}>next</a>\n            </span>\n          )}\n        </div>\n\n        <h1>{post.frontmatter.title}</h1>\n        <time dateTime={post.frontmatter.date}>{post.frontmatter.date}</time>\n        <dl>\n          {post.frontmatter.tags.map(tag => (\n            <dt key={tag}>{tag}</dt>\n          ))}\n        </dl>\n\n        <article dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    )\n  }\n}\n\nexport const postQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}