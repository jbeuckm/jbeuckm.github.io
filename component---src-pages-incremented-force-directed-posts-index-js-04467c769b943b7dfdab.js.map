{"version":3,"sources":["webpack:///./src/pages/IncrementedForceDirectedPosts/PlayPauseButton.js","webpack:///./src/lib/utils.ts","webpack:///./src/pages/IncrementedForceDirectedPosts/index.js","webpack:///./src/lib/ForceDirectedGraph/Point2D.ts","webpack:///./src/lib/ForceDirectedGraph/ForceDirectedGraph.ts","webpack:///./src/hexagons/clients/blog.js","webpack:///./src/lib/ForceDirectedGraph/distance.ts","webpack:///./src/lib/hexGrid.ts","webpack:///./src/lib/forceFunction.ts","webpack:///./src/lib/getInitialPlacement.ts","webpack:///./src/lib/getSimilarityRelationship.ts","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","PlayPauseButton","_ref","onToggle","style","_useState","useState","ongoing","setOngoing","a","createElement","onClick","jitter","size","Math","random","indexOfMax","values","maxValue","Number","MIN_VALUE","maxIndex","forEach","value","index","THETA_POSITIONS","PHI_POSITIONS","PALETTE","TWO_PI","PI","styles","button","marginRight","ForceDirectedSnappedPosts","areaSize","Point2D","onToggleOngoing","bool","_this","step","groupsOngoing","randomize","fdg","initializePositions","items","draw","findItemPlacement","itemIndex","relationshipMatrix","thisItem","lastItem","id","position","x","y","similarities","slice","map","relationship","similarity","similarIndex","setup","_callee","nextItemIndex","regenerator_default","wrap","_context","prev","next","ForceDirectedGraph","getItemsRelationship","getSimilarityRelationship","getInitialPlacement","forceOnItemFromSourceItem","forceFunction","placedItems","prepareRelationshipMatrix","console","log","runSteps","placeNextItem","nextItem","push","then","stop","BUMP_VALUE","bump","numSteps","Promise","resolve","singleStep","window","requestAnimationFrame","ctx","clearRect","item","pos","scale","tags","length","tag","i","beginPath","moveTo","arc","fillStyle","charCodeAt","fill","snapItems","assignItemsToNearestAddress","hexagonCoordMatrix","componentDidMount","_this2","this","buildPositionMatrix","rowArray","row","coords","col","backgroundCtx","fillRect","theta","phi","blogClient","Post","list","response","data","render","_this3","react_default","Fragment","height","width","ref","getContext","Component","add","point","factor","ACCELERATION_FACTOR","targetItem","sourceItem","Error","totalForceOnItem","aggregateForce","placedItem","placedItemIndex","force","Object","assign","moveItem","distance","count","N","Array","j","amount","mappersmith__WEBPACK_IMPORTED_MODULE_0__","mappersmith__WEBPACK_IMPORTED_MODULE_0___default","mappersmith_middleware_encode_json__WEBPACK_IMPORTED_MODULE_1__","mappersmith_middleware_encode_json__WEBPACK_IMPORTED_MODULE_1___default","forge","clientId","host","middleware","EncodeJson","resources","path","d","distance2D","distance1D","x1","x2","EXTENT","basicDistance","mirrorDistance","p1","p2","dX","dY","magnitude","sqrt","direction","_THETA_DIVISIONS","THETA_INTERVAL","PHI_INTERVAL","layer","positionMatrix","thetaOffset","addressCoordMatrix","placements","empties","buildEmptyPlacements","minDistance","MAX_SAFE_INTEGER","closestHexagon","closestAddress","_ForceDirectedGraph_Point2D__WEBPACK_IMPORTED_MODULE_0__","_ForceDirectedGraph_distance__WEBPACK_IMPORTED_MODULE_1__","_distance2D","scalarDistance","closeForce","strength","similarForce","dissimilarForce","radius","lastPostId","postId","tagString","sort","join","codeSum","cos","sin","ramda__WEBPACK_IMPORTED_MODULE_0__","ramda__WEBPACK_IMPORTED_MODULE_1__","sameTags","intersection","toUpper","runtime","exports","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","reject","invoke","result","__await","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"component---src-pages-incremented-force-directed-posts-index-js-04467c769b943b7dfdab.js","sourcesContent":["import React, { useState } from \"react\"\n\nconst PlayPauseButton = ({ onToggle, style }) => {\n  const [ongoing, setOngoing] = useState(false)\n\n  return (\n    <button\n      style={style}\n      onClick={() => {\n        onToggle(!ongoing)\n        setOngoing(!ongoing)\n      }}\n    >\n      {ongoing ? \"stop\" : \"go\"}\n    </button>\n  )\n}\n\nexport default PlayPauseButton\n","export const jitter = (size: number): number => size * (Math.random() - 0.5)\n\nexport const indexOfMax = (values: number[]): number => {\n  let maxValue = Number.MIN_VALUE\n  let maxIndex = -1\n  values.forEach((value, index) => {\n    if (value > maxValue) {\n      maxValue = value\n      maxIndex = index\n    }\n  })\n  return maxIndex\n}\n","import React, { Component } from \"react\"\nimport blogClient from \"../../hexagons/clients/blog\"\nimport {\n  buildPositionMatrix,\n  assignItemsToNearestAddress,\n} from \"../../lib/hexGrid\"\nimport { jitter, indexOfMax } from \"../../lib/utils\"\nimport ForceDirectedGraph from \"../../lib/ForceDirectedGraph/ForceDirectedGraph\"\nimport Point2D from \"../../lib/ForceDirectedGraph/Point2D\"\nimport PlayPauseButton from \"./PlayPauseButton\"\nimport forceFunction from \"../../lib/forceFunction\"\nimport getInitialPlacement from \"../../lib/getInitialPlacement\"\nimport getSimilarityRelationship from \"../../lib/getSimilarityRelationship\"\n\nconst THETA_POSITIONS = 40\nconst PHI_POSITIONS = 30\n\nconst PALETTE = [\n  \"#a00\",\n  \"#0a0\",\n  \"#00a\",\n  \"#990\",\n  \"#da0\",\n  \"#099\",\n  \"#909\",\n  \"#555\",\n  \"#f3f\",\n]\nconst TWO_PI = 2 * Math.PI\n\nconst styles = {\n  button: {\n    marginRight: 15,\n  },\n}\n\nclass ForceDirectedSnappedPosts extends Component {\n  areaSize = new Point2D(TWO_PI, TWO_PI)\n  ongoing = false\n  onToggleOngoing = bool => {\n    this.ongoing = bool\n    if (this.ongoing) {\n      this.step()\n    }\n  }\n  groupsOngoing = true\n\n  componentDidMount() {\n    this.hexagonCoordMatrix = buildPositionMatrix(\n      THETA_POSITIONS,\n      PHI_POSITIONS\n    )\n    const scale = 500 / TWO_PI\n    this.hexagonCoordMatrix.forEach((rowArray, row) => {\n      rowArray.forEach((coords, col) => {\n        this.backgroundCtx.fillRect(\n          scale * coords.theta,\n          scale * coords.phi,\n          1,\n          1\n        )\n      })\n    })\n\n    blogClient.Post.list().then(response => {\n      const items = response.data().items\n      this.setup(items)\n    })\n  }\n\n  randomize = () => {\n    this.fdg.initializePositions(this.items)\n    this.draw()\n  }\n\n  findItemPlacement = (items, itemIndex, relationshipMatrix) => {\n    const thisItem = items[itemIndex]\n    const lastItem = items[itemIndex - 1]\n\n    if (thisItem.id === lastItem.id) {\n      return new Point2D(\n        lastItem.position.x + jitter(0.05),\n        lastItem.position.y + jitter(0.05)\n      )\n    }\n    // find relaionships to already placed items\n    const similarities = relationshipMatrix[itemIndex]\n      .slice(0, itemIndex)\n      .map(relationship => relationship.similarity)\n\n    const similarIndex = indexOfMax(similarities)\n\n    if (similarIndex > -1) {\n      const { position } = items[similarIndex]\n\n      return new Point2D(position.x + jitter(0.1), position.y + jitter(0.1))\n    }\n\n    return new Point2D(Math.random() * TWO_PI, Math.random() * TWO_PI)\n  }\n\n  setup = async items => {\n    this.items = items\n\n    this.fdg = new ForceDirectedGraph(this.areaSize, 0.00001)\n    this.fdg.getItemsRelationship = getSimilarityRelationship\n    this.fdg.getInitialPlacement = getInitialPlacement\n    this.fdg.forceOnItemFromSourceItem = forceFunction\n    this.fdg.placedItems = items\n    const relationshipMatrix = this.fdg.prepareRelationshipMatrix()\n    this.fdg.initializePositions([items[0], items[1]])\n    console.log(\"placed\", items[0])\n    await this.runSteps(100)\n\n    this.draw()\n\n    let nextItemIndex = 2\n\n    const placeNextItem = () => {\n      const nextItem = this.items[nextItemIndex]\n      if (nextItem) {\n        nextItem.position = this.findItemPlacement(\n          this.items,\n          nextItemIndex,\n          relationshipMatrix\n        )\n        this.fdg.placedItems.push(nextItem)\n        this.runSteps(10).then(placeNextItem)\n      }\n      nextItemIndex++\n    }\n\n    placeNextItem()\n  }\n\n  BUMP_VALUE = 0.6\n\n  bump = () => {\n    this.fdg.bump(this.BUMP_VALUE)\n    this.draw()\n  }\n\n  runSteps = numSteps =>\n    new Promise(resolve => {\n      let step = 0\n      const singleStep = () => {\n        this.fdg.step()\n        this.draw()\n        step++\n\n        if (step >= numSteps) {\n          resolve()\n        } else {\n          window.requestAnimationFrame(singleStep)\n        }\n      }\n      singleStep()\n    })\n\n  step = () => {\n    this.fdg.step()\n\n    this.draw()\n\n    if (this.ongoing) {\n      window.requestAnimationFrame(this.step)\n    }\n  }\n\n  draw = () => {\n    this.ctx.clearRect(0, 0, 500, 500)\n\n    this.fdg.placedItems.forEach(item => {\n      const pos = new Point2D(item.position.x, item.position.y)\n      const scale = 500 / TWO_PI\n      pos.scale(scale)\n\n      let step = TWO_PI / item.tags.length\n\n      item.tags.forEach((tag, i) => {\n        this.ctx.beginPath()\n        this.ctx.moveTo(pos.x, pos.y)\n        this.ctx.arc(pos.x, pos.y, 3, i * step, (i + 1) * step)\n        this.ctx.fillStyle = PALETTE[tag.charCodeAt(0) % PALETTE.length]\n        this.ctx.fill()\n      })\n    })\n  }\n\n  snapItems = () => {\n    assignItemsToNearestAddress(\n      this.fdg.placedItems,\n      this.areaSize,\n      this.hexagonCoordMatrix,\n      THETA_POSITIONS,\n      PHI_POSITIONS\n    )\n\n    this.draw()\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ height: 500 }}>\n          <canvas\n            style={{ position: \"absolute\" }}\n            width=\"500\"\n            height=\"500\"\n            ref={ref => (this.backgroundCtx = ref.getContext(\"2d\"))}\n          />\n\n          <canvas\n            style={{ position: \"absolute\" }}\n            width=\"500\"\n            height=\"500\"\n            ref={ref => (this.ctx = ref.getContext(\"2d\"))}\n          />\n        </div>\n        <button onClick={this.randomize} style={styles.button}>\n          randomize\n        </button>\n\n        <button onClick={this.bump} style={styles.button}>\n          bump\n        </button>\n\n        <PlayPauseButton\n          onToggle={this.onToggleOngoing}\n          style={styles.button}\n        />\n\n        <button onClick={this.snapItems} style={styles.button}>\n          assign\n        </button>\n      </>\n    )\n  }\n}\n\nexport default ForceDirectedSnappedPosts\n","class Point2D {\n  public x: number\n  public y: number\n\n  constructor(x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  public add(point: Point2D): Point2D {\n    this.x += point.x\n    this.y += point.y\n\n    return this\n  }\n\n  public scale(factor: number): Point2D {\n    this.x *= factor\n    this.y *= factor\n\n    return this\n  }\n}\n\nexport default Point2D\n","import { Item } from \"./types.d\"\nimport Point2D from \"./Point2D\"\n\nclass ForceDirectedGraph {\n  public areaSize: Point2D = null\n  public placedItems: Item[] = null\n  private ACCELERATION_FACTOR = null\n  private relationshipMatrix = [[]]\n\n  constructor(areaSize: Point2D, ACCELERATION_FACTOR: number = 0.0004) {\n    this.areaSize = areaSize\n    this.ACCELERATION_FACTOR = ACCELERATION_FACTOR\n  }\n\n  public forceOnItemFromSourceItem = (\n    targetItem: Item,\n    sourceItem: Item,\n    areaSize: Point2D,\n    relationship: object\n  ): Point2D => {\n    throw new Error(`forceOnItemFromSourceItem() not defined as (\n      targetItem: Item,\n      sourceItem: Item,\n      areaSize: Point2D,\n      relationship: object\n    ): Point2D`)\n  }\n\n  totalForceOnItem = (itemIndex: number): Point2D => {\n    const item = this.placedItems[itemIndex]\n    let aggregateForce = new Point2D(0, 0)\n\n    this.placedItems.forEach((placedItem, placedItemIndex) => {\n      if (placedItem.id === item.id) return\n\n      const force = this.forceOnItemFromSourceItem(\n        item,\n        placedItem,\n        this.areaSize,\n        this.relationshipMatrix[placedItemIndex][itemIndex]\n      )\n\n      aggregateForce.add(force)\n    })\n\n    return aggregateForce\n  }\n\n  public getInitialPlacement = (item: Item): Point2D =>\n    new Point2D(\n      this.areaSize.x * Math.random(),\n      this.areaSize.y * Math.random()\n    )\n\n  public initializePositions = (items: Item[]): void => {\n    this.placedItems = items.map((item: Item) => {\n      return {\n        ...item,\n        position: this.getInitialPlacement(item),\n      }\n    })\n  }\n\n  private moveItem = (item: Item, distance: Point2D): void => {\n    item.position.add(distance)\n    if (item.position.x < 0) {\n      item.position.x += this.areaSize.x\n    } else if (item.position.x > this.areaSize.x) {\n      item.position.x -= this.areaSize.x\n    }\n    if (item.position.y < 0) {\n      item.position.y += this.areaSize.y\n    } else if (item.position.y > this.areaSize.y) {\n      item.position.y -= this.areaSize.y\n    }\n  }\n\n  public step = (count: number = 1): void => {\n    for (let step = count; step > 0; step--) {\n      for (let i = this.placedItems.length - 1; i >= 0; i--) {\n        const force = this.totalForceOnItem(i)\n\n        this.moveItem(\n          this.placedItems[i],\n          force.scale(this.ACCELERATION_FACTOR)\n        )\n      }\n    }\n  }\n\n  public getItemsRelationship = (\n    sourceItem: Item,\n    targetItem: Item\n  ): object => {\n    throw \"getItemsRelationship must be defined as (sourceItem:Item, targetItem:Item):object\"\n  }\n\n  public prepareRelationshipMatrix = (): object[][] => {\n    const N = this.placedItems.length\n    const relationshipMatrix = Array(N)\n      .fill(0)\n      .map(() => Array(N).fill(0))\n\n    for (let i = 0; i < N; ++i) {\n      for (let j = 0; j < N; ++j) {\n        if (i == j) continue\n\n        const sourceItem = this.placedItems[i]\n        const targetItem = this.placedItems[j]\n\n        const relationship = this.getItemsRelationship(sourceItem, targetItem)\n\n        relationshipMatrix[i][j] = relationship\n        relationshipMatrix[j][i] = relationship\n      }\n    }\n\n    this.relationshipMatrix = relationshipMatrix\n    return relationshipMatrix\n  }\n\n  public bump = (amount: number): void => {\n    this.placedItems.forEach(item => {\n      item.position.x += amount * (Math.random() - 0.5)\n      item.position.y += amount * (Math.random() - 0.5)\n    })\n  }\n}\n\nexport default ForceDirectedGraph\n","import forge from \"mappersmith\"\nimport EncodeJson from \"mappersmith/middleware/encode-json\"\n\nexport default forge({\n  clientId: \"joes-blog\",\n  host: \"\",\n  middleware: [EncodeJson],\n  resources: {\n    Post: {\n      list: { path: \"/feed-1.json?z=\" + Math.random() }, // process.env.POSTS_ENDPOINT\n    },\n  },\n})\n","import { Distance2D } from \"./types.d\"\nimport Point2D from \"./Point2D\"\n\nexport const distance1D = (x1: number, x2: number, EXTENT: number): number => {\n  if (x1 == x2) {\n    return 0\n  }\n  const basicDistance = x2 - x1\n  if (x1 < x2) {\n    const mirrorDistance = x1 + EXTENT - x2\n\n    if (basicDistance < mirrorDistance) {\n      return basicDistance\n    }\n    return -mirrorDistance\n  } else {\n    const mirrorDistance = x2 + EXTENT - x1\n\n    if (-basicDistance < mirrorDistance) {\n      return basicDistance\n    }\n    return mirrorDistance\n  }\n}\n\nexport const distance2D = (\n  p1: Point2D,\n  p2: Point2D,\n  EXTENT: Point2D\n): Distance2D => {\n  const dX = distance1D(p1.x, p2.x, EXTENT.x)\n  const dY = distance1D(p1.y, p2.y, EXTENT.y)\n  const magnitude = Math.sqrt(dX * dX + dY * dY)\n\n  return {\n    magnitude,\n    direction: { x: dX / magnitude, y: dY / magnitude },\n  }\n}\n","import { distance2D } from \"./ForceDirectedGraph/distance\"\nimport { uniq } from \"ramda\"\nimport Point2D from \"./ForceDirectedGraph/Point2D\"\nimport { Address, Distance2D } from \"./ForceDirectedGraph/types.d\"\n\nconst NEIGHBORS = [\n  { row: 1, col: 0 },\n  { row: 2, col: 0 },\n  { row: 1, col: -1 },\n  { row: -1, col: -1 },\n  { row: -2, col: 0 },\n  { row: -1, col: 0 },\n]\n\nexport const getNeighbor = (\n  col: number,\n  row: number,\n  neighborIndex: number,\n  THETA_POSITIONS: number,\n  PHI_POSITIONS: number\n): Address => {\n  const neighbor = NEIGHBORS[neighborIndex]\n\n  const newRow = row + neighbor.row\n  const newCol = col + neighbor.col\n\n  return {\n    row: newRow < 0 ? newRow + PHI_POSITIONS : newRow % PHI_POSITIONS,\n    col: newCol < 0 ? newCol + THETA_POSITIONS : newCol % THETA_POSITIONS,\n  }\n}\n\nexport const buildPositionMatrix = (\n  THETA_POSITIONS: number,\n  PHI_POSITIONS: number\n): Point2D[][] => {\n  const _THETA_DIVISIONS = 3 * THETA_POSITIONS\n\n  const THETA_INTERVAL = (2 * Math.PI) / _THETA_DIVISIONS\n  const PHI_INTERVAL = (2 * Math.PI) / PHI_POSITIONS\n\n  let layer = 0\n  const positionMatrix = []\n\n  for (let row = 0; row < PHI_POSITIONS; row++) {\n    positionMatrix[row] = Array(THETA_POSITIONS)\n\n    const thetaOffset = layer % 2 === 1 ? 1.5 * THETA_INTERVAL : 0\n\n    for (let col = 0; col < THETA_POSITIONS; col++) {\n      positionMatrix[row][col] = new Point2D(\n        thetaOffset + 3 * col * THETA_INTERVAL,\n        row * PHI_INTERVAL\n      )\n    }\n\n    layer++\n  }\n\n  return positionMatrix\n}\n/*\nexport const buildDistanceMatrix = (\n  positionMatrix: object[][],\n  COL_COUNT,\n  ROW_COUNT,\n  extents = { x: 2 * Math.PI, y: 2 * Math.PI }\n): Distance2D[][][][] => {\n  const distances = Array(ROW_COUNT)\n\n  for (let i = 0; i < ROW_COUNT; i++) {\n    distances[i] = Array(COL_COUNT)\n    for (let j = 0; j < COL_COUNT; j++) {\n      distances[i][j] = Array(ROW_COUNT)\n      for (let k = 0; k < ROW_COUNT; k++) {\n        distances[i][j][k] = Array(COL_COUNT)\n        for (let l = 0; l < COL_COUNT; l++) {\n          distances[i][j][k][l] = distance2D(\n            positionMatrix[i][j],\n            positionMatrix[k][l],\n            extents\n          )\n        }\n      }\n    }\n  }\n\n  return distances\n}\n*/\n\nexport const buildEmptyPlacements = (\n  THETA_POSITIONS: number,\n  PHI_POSITIONS: number\n): object[][] => {\n  const empties = []\n\n  for (let i = 0; i < PHI_POSITIONS; i++) {\n    empties[i] = Array(THETA_POSITIONS)\n    for (let j = 0; j < THETA_POSITIONS; j++) {\n      empties[i][j] = null\n    }\n  }\n\n  return empties\n}\n\nconst getPrecomputedDistance = (\n  c1: Address,\n  c2: Address,\n  distanceMatrix: Distance2D[][][][]\n): Distance2D => distanceMatrix[c1.row][c1.col][c2.row][c2.col]\n\nexport const assignItemsToNearestAddress = (\n  items,\n  areaSize,\n  addressCoordMatrix,\n  THETA_POSITIONS,\n  PHI_POSITIONS\n) => {\n  const placements = buildEmptyPlacements(THETA_POSITIONS, PHI_POSITIONS)\n\n  items.forEach(item => {\n    const { position } = item\n\n    let minDistance = { magnitude: Number.MAX_SAFE_INTEGER }\n    let closestHexagon = null,\n      closestAddress = null\n\n    addressCoordMatrix.forEach((rowArray, row) => {\n      rowArray.forEach((coords, col) => {\n        if (!placements[row][col]) {\n          const distance = distance2D(position, coords, areaSize)\n\n          if (distance.magnitude < minDistance.magnitude) {\n            minDistance = distance\n            closestHexagon = coords\n            closestAddress = { row, col }\n          }\n        }\n      })\n    })\n\n    if (closestHexagon) {\n      item.position = new Point2D(closestHexagon.x, closestHexagon.y)\n      placements[closestAddress.row][closestAddress.col] = item\n    }\n  })\n}\n","import { Item, Relationship } from \"./ForceDirectedGraph/types.d\"\nimport Point2D from \"./ForceDirectedGraph/Point2D\"\nimport { distance2D } from \"./ForceDirectedGraph/distance\"\n\nexport default (\n  targetItem: Item,\n  sourceItem: Item,\n  areaSize: Point2D,\n  relationship: Relationship\n): Point2D => {\n  const { magnitude: scalarDistance, direction } = distance2D(\n    targetItem.position,\n    sourceItem.position,\n    areaSize\n  )\n  const { similarity } = relationship\n\n  const closeForce = -1.5 / (scalarDistance / 30)\n\n  const strength =\n    similarity > 0\n      ? similarForce(scalarDistance, closeForce, similarity)\n      : dissimilarForce(scalarDistance, closeForce, similarity)\n\n  return new Point2D(strength * direction.x, strength * direction.y)\n}\n\nconst dissimilarForce = (\n  scalarDistance: number,\n  closeForce: number,\n  similarity: number\n) =>\n  scalarDistance < 0.9\n    ? closeForce + (10 * similarity) / (100 * (scalarDistance + 1))\n    : 0\n\nconst similarForce = (\n  scalarDistance: number,\n  closeForce: number,\n  similarity: number\n) => closeForce + (800 * similarity) / (40 * (scalarDistance + 1))\n","import { Item } from \"./ForceDirectedGraph/types.d\"\nimport Point2D from \"./ForceDirectedGraph/Point2D\"\n\nexport default (item: Item): Point2D => {\n  let radius: number, theta: number, lastPostId: string\n\n  if (lastPostId != item.postId) {\n    lastPostId = item.postId\n\n    const tagString: string = item.tags.sort().join(\"\") || \"uncategorized\"\n\n    let codeSum: number = 0\n    for (let i = tagString.length - 1; i >= 0; i--) {\n      codeSum += tagString.charCodeAt(i)\n    }\n\n    theta = (codeSum % 628) / 100 + 0.05 * Math.random()\n\n    radius = 0.1 + 0.5 * Math.random()\n  }\n\n  radius += 0.01\n\n  return new Point2D(radius * Math.cos(theta), radius * Math.sin(theta))\n}\n","import { Item } from \"./ForceDirectedGraph/types.d\"\nimport { intersection, toUpper } from \"ramda\"\n\nexport default (sourceItem: Item, targetItem: Item): object => {\n  const sameTags = intersection(\n    sourceItem.tags.map(toUpper),\n    targetItem.tags.map(toUpper)\n  )\n\n  let similarity = sameTags.length >= 1 ? 5 + 5 * Math.log(sameTags.length) : -5\n\n  if (sourceItem.postId && sourceItem.postId === targetItem.postId) {\n    similarity += 20\n  }\n\n  return { similarity }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}