{"componentChunkName":"component---src-templates-post-js","path":"/screw_advance_box_joint_jig","webpackCompilationHash":"e7972e7c90a222871a07","result":{"data":{"markdownRemark":{"html":"<p>I copied the design for this box joint jig from the great <a href=\"http://woodgears.ca/\">http://woodgears.ca/</a>. </p>\n<p><a href=\"/dscf1114-1bc51d568ccd28f226f33a1bb0b6faa9.jpg\"><img src=\"/dscf1114-1bc51d568ccd28f226f33a1bb0b6faa9.jpg\" alt=\"dscf1114\" title=\"dscf1114\"></a> </p>\n<p>The carriage and rails use maple for the sliding parts. No oil necessary. </p>\n<p><a href=\"/dscf1113-cf996581bf1c6c8175c7b27fc8b1375b.jpg\"><img src=\"/dscf1113-cf996581bf1c6c8175c7b27fc8b1375b.jpg\" alt=\"dscf1113\" title=\"dscf1113\"></a> </p>\n<p>I tried a few joints before building the spring-wheel assembly, which is itself box-jointed. My carriage only had a little play with no spring but I decided the spring is necessary to keep things aligned. </p>\n<p><a href=\"/dscf1112-f0dfaf6a60b14ec669e730e64ce41747.jpg\"><img src=\"/dscf1112-f0dfaf6a60b14ec669e730e64ce41747.jpg\" alt=\"dscf1112\" title=\"dscf1112\"></a> </p>\n<p>This is the first gear-drive I've tried to make and turned out to work pretty well. </p>\n<embed src=\"http://www.youtube.com/v/BKYGnkroXPQ?fs=1&amp;hl=en_US\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"640\" height=\"385\">","frontmatter":{"path":"/screw_advance_box_joint_jig","title":"Screw Advance Box Joint Jig","date":"2010-11-06","tags":["artwork"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"html":"<p>I started building a CNC mill this weekend using a lot of the ideas from Tom McWire's popular instructible: </p>\n<p><a href=\"http://www.instructables.com/id/Easy-to-Build-Desk-Top-3-Axis-CNC-Milling-Machine/\">http://www.instructables.com/id/Easy-to-Build-Desk-Top-3-Axis-CNC-Milling-Machine/</a> </p>\n<p><a href=\"/z-axis_support-3f951dcea2bae5ec48e3fd2f7f219b32.jpg\"><img src=\"/z-axis_support-3f951dcea2bae5ec48e3fd2f7f219b32.jpg\" alt=\"z-axis_support\" title=\"z-axis_support\"></a> </p>\n<p>The z-axis support is 6\" x 1.25\" lumber that is box jointed. This is an extremely rigid assembly. The leveling feet probably aren't necessary but they were 35 cents at <a href=\"http://ax-man.com/\">Ax-man</a> and a bit classy. </p>\n<p><a href=\"/x-axis-15dd84adf1fe108c1ee4dea9f4cf83c6.jpg\"><img src=\"/x-axis-15dd84adf1fe108c1ee4dea9f4cf83c6.jpg\" alt=\"x-axis\" title=\"x-axis\"></a> </p>\n<p>Here is my acrylic x-axis with aluminum channels, built on a piece of MDF. Menards didn't have ball bearings of the correct size so I'm trying a small, nylon shower curtain roller that is handily threaded. It turns easily with very little play and I can't imagine much difference between this and a ball bearing for this application. </p>\n<p><a href=\"/coupling_nuts-41050a5cd9ee89d31d669ba9253bb466.jpg\"><img src=\"/coupling_nuts-41050a5cd9ee89d31d669ba9253bb466.jpg\" alt=\"coupling_nuts\" title=\"coupling_nuts\"></a> </p>\n<p>Here are aluminum-wrapped coupling nuts for the three axes. Using long couplers instead of shorter tee-nuts is a great idea from the Tom. Also a great idea is using tubing to connect the stepper motor shaft to the threaded rod. I've been looking for a good way to make that joint for a while now and this is perfect. </p>","id":"d5d995e4-9d6e-5fa7-8387-f09d61792aa0","frontmatter":{"path":"/cnc_part_1","title":"CNC Part 1","date":"2010-11-15","tags":["CNC"],"hexagonImages":["z-axis_support.jpeg_hexagon.jpeg","z-axis_support.jpg_hexagon.jpeg","x-axis.jpg_hexagon.jpeg","coupling_nuts.jpg_hexagon.jpeg"]}},"next":{"html":"<p><a href=\"/pendulum-c404280c0ac8b0616aab1e509abfd5b1.png\"><img src=\"/pendulum-c404280c0ac8b0616aab1e509abfd5b1.png\"></a></p>\n<p>Sometimes it's nice to forget about 3rd party components, big clunky libraries, the Facebook API, etc. and just simulate a simple physical system from first principles. Here's \"mass on a string\":</p>\n<p>Newton's 2nd law, amath`vec F=m vec a`endamath says that an object's acceleration is dependent on the force on that object. If you push something, its speed will increase in the direction of your push. And it takes harder pushing to move things with more mass as fast as it does little things.</p>\n<p>When a mass is <em>pivoting</em> instead of free to move (like a pendulum), the analogy of <em>force</em> is <em>torque</em>, which is represented by the greek amath`tau`endamath. Torque is the force <em>along the pivot path</em> multiplied by the distance from the force to the pivot point (the radius). amath`tau = F_tan * r`endamath.</p>\n<p>amath`tau`endamath is like amath`vec F`endamath</p>\n<p>Mass is a measure of how difficult it is to accelerate an object. The amount you have to push a pivoting body depends on the distance from the pivot to where you are pushing (think of opening a door by pushing on the handle vs. pushing right next to the hinge.) So in the pivoting case, the analogy for \"mass\" appears in the equation as the moment of inertia, which depends on plain old mass and how far the mass is from the pivot (radius) : amath`I = m * r^2`endamath.</p>\n<p>amath`I`endamath is like amath`m`endamath</p>\n<p>When pivoting, we keep track of position by noting the angle, call it amath`theta`endamath. Then the velocity is the change in angle during each second, call it amath`omega`endamath. Finally, the acceleration is the change in angular velocity each second, call it amath`alpha`endamath.</p>\n<p>amath`alpha`endamath is like amath`vec a`endamath</p>\n<p>So for the pendulum, Newton's second law is like amath`tau = I alpha`endamath.</p>\n<p>Let's look at the terms involved.</p>\n<p>The force for a pendulum is supplied by gravity and has magnitude amath`m*g`endamath where amath`m`endamath is the mass of the pendulum and amath`g`endamath is how hard the earth pulls on stuff. The tricky part about a pendulum is that this force is always changing direction when the pendulum swings, and we need to know how much of this force is <em>along the swing path</em> of the pendulum.</p>\n<p>Let's call the position angle of the pendulum <em>zero</em> when the pendulum is hanging straight down. When at angle zero, the earth is pulling the string straight down and none of the weight force is in the direction of swing. Then when the pendulum is straight out at 90 degrees, <em>all</em> of the force is against the swing path. To find the force along the path, we need to multiply the force by a changing number that is 0% at zero degrees, -100% at 90 degrees and some appropriate in-between number at every angle between zero and 90. The negative of the trigonometric function <em>sinus</em> does this perfectly. The force along the swing path of a pendulum is amath`m*g*-sin theta`endamath.</p>\n<p>Now we can expand amath`tau = I alpha`endamath into terms that we can easily supply:</p>\n<p>amath`m*g*-sin theta * r = m * r^2 * alpha`endamath</p>\n<p>This is more than what we need to describe the motion of the pendulum. We can divide both sides by amath`r^2`endamath and by amath`m`endamath so this is more simply amath`alpha = -g/r * sin theta`endamath. The term amath`-g/r`endamath is a constant that we can tune to make the program simulate a good-looking pendulum. To draw a pendulum on the screen, we must know its position, amath`theta`endamath. That means we can do a simple multiplication to find out how the angle-change rate is changing.</p>\n<p>To program this, keep variables for <strong>theta</strong>=amath`theta`endamath, which is the current angle of the pendulum, <strong>omega</strong>=amath`omega`endamath, which is how the position is changing and <strong>alpha</strong>=amath`alpha`endamath, which is how <strong>omega</strong> is changing. Each frame (or interval/timer event if you're into that kind of thing), multiply your tuned constant by minus sinus of the current <strong>theta</strong> to calculate the new <strong>alpha</strong>. Add that new <strong>alpha</strong> to <strong>omega</strong> and add <strong>omega</strong> to <strong>theta</strong>. Then rotate the pendulum graphic to the new value of <strong>theta</strong>. Schwing!</p>\n<p>(click to increase <strong>omega</strong>)</p>\n<object type=\"application/x-shockwave-flash\"  width=\"200\" height=\"200\">\n  <param name=\"movie\" value=\"/pendulum1-fb4fd86286398fd0ab9f8985b28c0e6e.swf\" />\n</object>\n<p><a href=\"undefined\">as3 demo source</a></p>","id":"a7df7801-fa59-528c-8c5e-8f4777e9602a","frontmatter":{"path":"/pendulum_physics_and_code","title":"Pendulum Physics and Code","date":"2010-09-30","tags":["mathematics","physics","programming"],"hexagonImages":["Screen%20shot%202011-07-21%20at%205.07.55%20PM.png_hexagon.png"]}}}}}