{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","styles","container","marginLeft","marginRight","maxWidth","paddingLeft","paddingRight","navLinks","width","position","height","leftButton","left","rightButton","right","_ref","data","_ref$pathContext","pathContext","prev","next","post","markdownRemark","a","createElement","style","frontmatter","title","name","content","tags","join","href","path","dateTime","date","map","tag","key","dangerouslySetInnerHTML","__html","html"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAGMU,EAAS,CACbC,UAAW,CACTC,WAAY,OACZC,YAAa,OACbC,SAAU,IACVC,YAAa,GACbC,aAAc,IAEhBC,SAAU,CACRC,MAAO,OACPC,SAAU,WACVC,OAAQ,IAEVC,WAAY,CACVF,SAAU,WACVG,KAAM,GAERC,YAAa,CACXJ,SAAU,WACVK,MAAO,IAII,SAASpB,EAATqB,GAAyD,IAArCC,EAAqCD,EAArCC,KAAqCC,EAAAF,EAA/BG,YAAeC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,KACpCC,EAASL,EAAzBM,eAER,OACEzB,EAAA0B,EAAAC,cAAA,OAAKC,MAAOzB,EAAOC,WACjBJ,EAAA0B,EAAAC,cAACzB,EAAA,OAAD,KACEF,EAAA0B,EAAAC,cAAA,iBAASH,EAAKK,YAAYC,MAA1B,yBACA9B,EAAA0B,EAAAC,cAAA,QAAMI,KAAK,WAAWC,QAASR,EAAKK,YAAYI,KAAKC,KAAK,SAG5DlC,EAAA0B,EAAAC,cAAA,OAAKC,MAAOzB,EAAOO,UAChBY,GACCtB,EAAA0B,EAAAC,cAAA,QAAMC,MAAOzB,EAAOW,YAClBd,EAAA0B,EAAAC,cAAA,KAAGQ,KAAMb,EAAKO,YAAYO,MAA1B,SAGHb,GACCvB,EAAA0B,EAAAC,cAAA,QAAMC,MAAOzB,EAAOa,aAClBhB,EAAA0B,EAAAC,cAAA,KAAGQ,KAAMZ,EAAKM,YAAYO,MAA1B,UAKNpC,EAAA0B,EAAAC,cAAA,UAAKH,EAAKK,YAAYC,OACtB9B,EAAA0B,EAAAC,cAAA,QAAMU,SAAUb,EAAKK,YAAYS,MAAOd,EAAKK,YAAYS,MACzDtC,EAAA0B,EAAAC,cAAA,UACGH,EAAKK,YAAYI,KAAKM,IAAI,SAAAC,GAAG,OAC5BxC,EAAA0B,EAAAC,cAAA,MAAIc,IAAKD,GAAMA,MAInBxC,EAAA0B,EAAAC,cAAA,WAASe,wBAAyB,CAAEC,OAAQnB,EAAKoB,SAKhD,IAAM9C,EAAS","file":"component---src-templates-post-js-7bf40ff7d43445077a48.js","sourcesContent":["import React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nconst styles = {\n  container: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: 600,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  navLinks: {\n    width: \"100%\",\n    position: \"relative\",\n    height: 15,\n  },\n  leftButton: {\n    position: \"absolute\",\n    left: 0,\n  },\n  rightButton: {\n    position: \"absolute\",\n    right: 0,\n  },\n}\n\nexport default function Template({ data, pathContext: { prev, next } }) {\n  const { markdownRemark: post } = data\n\n  return (\n    <div style={styles.container}>\n      <Helmet>\n        <title>\"{post.frontmatter.title}\" - from Joe Beuckman</title>\n        <meta name=\"keywords\" content={post.frontmatter.tags.join(\", \")} />\n      </Helmet>\n\n      <div style={styles.navLinks}>\n        {prev && (\n          <span style={styles.leftButton}>\n            <a href={prev.frontmatter.path}>prev</a>\n          </span>\n        )}\n        {next && (\n          <span style={styles.rightButton}>\n            <a href={next.frontmatter.path}>next</a>\n          </span>\n        )}\n      </div>\n\n      <h1>{post.frontmatter.title}</h1>\n      <time dateTime={post.frontmatter.date}>{post.frontmatter.date}</time>\n      <dl>\n        {post.frontmatter.tags.map(tag => (\n          <dt key={tag}>{tag}</dt>\n        ))}\n      </dl>\n\n      <article dangerouslySetInnerHTML={{ __html: post.html }} />\n    </div>\n  )\n}\n\nexport const postQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}